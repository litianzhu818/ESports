//
//  ESports.pch
//  ESports
//
//  Created by Peter Lee on 16/5/25.
//  Copyright © 2016年 Peter Lee. All rights reserved.
//

#ifndef ESports_pch
#define ESports_pch

// Include any system framework and library headers here that should be included in all compilation units.
// You will also need to set the Prefix Header build setting of one or more of your targets to reference this file.
#define RGBColor(R, G, B) [UIColor colorWithRed:(R)/255.0 green:(G)/255.0 blue:(B)/255.0 alpha:1.0]
#define HexColor(hexValue) [UIColor colorWithRed:((float)(((hexValue) & 0xFF0000) >> 16))/255.0 green:((float)(((hexValue) & 0xFF00) >> 8))/255.0 blue:((float)((hexValue) & 0xFF))/255.0 alpha:1.0]

#define UserDefaults [NSUserDefaults standardUserDefaults]
#define NotificationCenter [NSNotificationCenter defaultCenter]
#define myAppDelegate ((AppDelegate *)[[UIApplication sharedApplication] delegate])

//we will use this value when we test some code
#define TEST 1

// block self
#define WEAKSELF __weak typeof(self) weakSelf = self;
#define STRONGSELF __strong typeof(weakSelf) strongSelf = weakSelf;

#define CustomAlert(_S_, ...)     [[[UIAlertView alloc] initWithTitle:@"提示" message:[NSString stringWithFormat:(_S_), ##__VA_ARGS__] delegate:nil cancelButtonTitle:@"知道了" otherButtonTitles:nil] show]

/*************************************常用方法***************************************/
#define PNG_NAME(png_name) [UIImage imageNamed:png_name]

#define VOID_BLOCK  void(^)(void)
#define GLOBAL_GCD(block) dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), block)
#define MAIN_GCD(block) dispatch_async(dispatch_get_main_queue(),block)

/*************************************System info***************************************/
//用户头像质量对应的路径
#define USER_HEADER_IMAGE_QUALIRT_HEIGHT            @"bigs/"
#define USER_HEADER_IMAGE_QUALIRT_LOW               @"thumb/"
#define USER_HEADER_IMAGE_QUALIRT_DEFAULT           USER_HEADER_IMAGE_QUALIRT_LOW

//消息图片质量对应的路径
#define MESSAGE_IMAGE_QUALIRT_HEIGHT                USER_HEADER_IMAGE_QUALIRT_HEIGHT
#define MESSAGE_IMAGE_QUALIRT_MIDDLE                USER_HEADER_IMAGE_QUALIRT_LOW
#define MESSAGE_IMAGE_QUALIRT_DEFAULT               MESSAGE_IMAGE_QUALIRT_MIDDLE
#define MESSAGE_IMAGE_QUALIRT_LOW                   @"small/"

//#define NSDateTimeAgoLocalizedStrings
/*************************************User info***************************************/
//get the left top origin's x,y of a view
#define VIEW_TX(view) (view.frame.origin.x)
#define VIEW_TY(view) (view.frame.origin.y)
//get the width size of the view:width,height
#define VIEW_W(view)  (view.frame.size.width)
#define VIEW_H(view)  (view.frame.size.height)
//get the right bottom origin's x,y of a view
#define VIEW_BX(view) (view.frame.origin.x + view.frame.size.width)
#define VIEW_BY(view) (view.frame.origin.y + view.frame.size.height )
//get the x,y of the frame
#define FRAME_TX(frame)  (frame.origin.x)
#define FRAME_TY(frame)  (frame.origin.y)
//get the size of the frame
#define FRAME_W(frame)  (frame.size.width)
#define FRAME_H(frame)  (frame.size.height)

#define BOUNDS_W(bounds)  (bounds.size.width)
#define BOUNDS_H(bounds)  (bounds.size.height)

/*************************************User info***************************************/
#define USER_ACCOUNT        @"user_account"
#define USER_DEVICE_TOKEN   @"user_deviceToken"
#define AUTO_LOGIN          @"auto_login"

#define bound [ UIScreen mainScreen ].bounds
#define IS_IPAD (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPad)
#define CURRENT_IOS_SYSTEM_VERSION [[[UIDevice currentDevice] systemVersion] floatValue]
#define IOS_VERSION_7_OR_ABOVE ((CURRENT_IOS_SYSTEM_VERSION >= 7.0)? (YES):(NO))
#define SUPPORT_IOS8 __IPHONE_OS_VERSION_MIN_REQUIRED >= 80000
#define isIPhone5 ([UIScreen mainScreen].bounds.size.height == 568)
#define READ_PLIST(plistFileName) [[NSMutableDictionary alloc] initWithContentsOfFile:[[NSBundle mainBundle] pathForResource:plistFileName ofType:@"plist"]]

/*************************************log system***************************************/
#ifdef DEBUG
    #define LOG_HERE NSLog(@"<%@(line:%d method:%@)>:\n(null)\n<%@ %@>",[[NSString stringWithUTF8String:__FILE__] lastPathComponent], __LINE__,[NSString stringWithUTF8String:__func__],[NSString stringWithUTF8String:__DATE__],[NSString stringWithUTF8String:__TIME__])
    #define LOG(FORMAT,...)  NSLog(@"<%@(line:%d method:%@)>:\n%@\n<%@ %@>",[[NSString stringWithUTF8String:__FILE__] lastPathComponent], __LINE__,[NSString stringWithUTF8String:__func__], (FORMAT ? [NSString stringWithFormat:(FORMAT), ##__VA_ARGS__]:@"nil"),[NSString stringWithUTF8String:__DATE__],[NSString stringWithUTF8String:__TIME__])
#else
    #define LOG_HERE nil
    #define LOG(FORMAT,...) nil
#endif

#define LTZLocalizedString(Key) NSLocalizedStringFromTable((Key),@"QingChunApp", nil)


#endif /* ESports_pch */
